# -*- coding: utf-8 -*-
"""Копия блокнота "Skillbox Chat Bot Day 1"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iRtgaK8n58kwL5sS_YRvaDHyTvPZPjg9
"""

import nltk
import random

"""# Новый раздел"""



BOT_CONFIG = {
    "intents": { # Намерения
        "hello": { # Намерение поздароваться
            "examples": ["Привет", "Добрый день", "Шалом", "Здравствуйте"],
            "responses": ["Привет, человек", "Доброго времени суток"]
        },
        "bye": {
            "examples": ["Пока", "Досвидос", "Прощай"],
            "responses": ["Счастливо", "До свидания", "Если что, возвращайтесь"],
        },
        "howdoyoudo": {
            "examples": ["Как дела", "Что делаешь", "Какие дела"],
            "responses": ["Маюсь фигней", "Отвечаю на дурацкие вопросы", "Веду вебинары"],
        },
    },
    "failure_phrases": [
        "Я ничо не понил",
        "Что-то непонятно",
        "Я всего лишь бот, сформулируйте попроще"
    ]
}

def filter(text):
  text = text.lower()
  text = [c for c in text if c in 'абвгджзеёийклмнопрстуфхцчшщьыъэюя -']
  return ''.join(text)

def match(text, example): # "прощяй!" === "Прощай" ??
  text = filter(text)
  example = filter(example)
  
  distance = nltk.edit_distance(text, example) / len(example)
  if distance < 0.4:
    return True # Текст совпадает
  else:
    return False # Текст НЕ совпадает

def get_intent(text): 
  for intent, data in BOT_CONFIG['intents'].items():
    for example in data['examples']:
      if match(text, example):
        return intent

def get_answer_by_intent(intent):
  phrases = BOT_CONFIG['intents'][intent]['responses']
  return random.choice(phrases)

def bot(text):
  # 1. Понять намерение
  intent = get_intent(text)

  if intent:
    return get_answer_by_intent(intent)

  # 2. Пытаемся сгенерировать ответ по контексту
  # ToDo

  # 3. Отвечаем "заглушкой"
  failure_phrases = BOT_CONFIG['failure_phrases']
  return random.choice(failure_phrases)

question = ''
while question not in ['выход', 'отстань']:
  question = input()
  answer = bot(question)
  print(answer)